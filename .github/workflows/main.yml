# This is a basic workflow to help you get started with Actions

name: bobpossible

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  S3_BUCKET_NAME: bobpossible-deploy
  PROJECT_NAME: bobpossible
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Setup Java JDK
        uses: actions/setup-java@v3.3.0
        with:
          java-version: 11
          distribution: corretto
      
      - name: action-slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Github Actions
          fields: repo,commit,message,author # action,eventName,ref,workflow,job,took 추가할 수 있음
          mention: here
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URI_DEPLOY}} # required
        if: always() # Pick up events even if the job fails or is canceled.
          
      

      - name: Set application.yml file
        uses: microsoft/variable-substitution@v1
        with:
          files: 'src/main/resources/application.yml'
        env:
          spring.datasource.password: ${{secrets.RDS_PASSWORD}}
          spring.datasource.url: ${{secrets.RDS_URL}}
          logging.slack.webhook-uri: ${{secrets.SLACK_WEBHOOK_URI}}
          jpa.hibernate.ddl-auto: create
          jwt.secret: ${{secrets.JWT_SECRET}}

      - name: Set aws.yml file
        uses: microsoft/variable-substitution@v1
        with:
          files: 'src/main/resources/application-aws.yml'
        env:
          cloud.aws.credentials.accessKey: ${{secrets.S3_ACCESSKEY}}
          cloud.aws.credentials.secretKey: ${{secrets.S3_SECRETKEY}}
          cloud.aws.s3.bucket: ${{secrets.S3_BUCKET}}
          
      - name: Set oauth.yml file
        uses: microsoft/variable-substitution@v1
        with:
          files: 'src/main/resources/application-oauth.yml'
        env:
          spring.security.oauth2.client.registration.google.client-id: ${{secrets.GOOGLE_CLIENT_ID}}
          spring.security.oauth2.client.registration.google.client-secret: ${{secrets.GOOGLE_CLIENT_SECRET}}
          spring.security.oauth2.client.registration.naver.client-id: ${{secrets.NAVER_CLIENT_ID}}
          spring.security.oauth2.client.registration.naver.client-secret: ${{secrets.NAVER_CLIENT_SECRET}}
          spring.security.oauth2.client.registration.kakao.client-id: ${{secrets.KAKAO_CLIENT_ID}}


    
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash
        
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{ secrets.AWS_REGION}}
          
      - name: Upload to s3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
        
      - name: Code Deploy
        run: aws deploy create-deployment --application-name bobpossible --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name bobpossible-group --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
        

